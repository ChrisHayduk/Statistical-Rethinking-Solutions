install.packages("tidyverse")
install.packages("shint")
install.packages("shiny")
install.packages(c("tidyverse", "sweave"))
install.packages("knitr")
install.packages("xtable")
ways <- c(2, 1, 0)
ways/sum(ways)
ways <- c(1, 1, 0, 0, 0)
ways/sum(ways)
1/6*0.5 + 1/6*0.5
1/3
1/6
6/8
p_twins = 0.1 * 0.5 + 0.2 * 0.5
p_A_twins = (0.1 * 0.5)/p_twins
print(p_A_twins)
p_a_positive = 0.8 * 0.5 / (0.8*0.5+0.65*0.5)
print(p_a_positive)
p_a_testA = 0.8 * 0.5 / (0.8*0.5+0.35*0.5)
print(p_a_testA)
getwd()
setwd()
setwd("C:\\Users\\Chris\\Desktop\\Statistical Rethinking\\Chapter 2 - Small Worlds and Large Worlds")
setwd("C:\\Users\\Chris\\Desktop\\Statistical Rethinking\\Chapter 3 - Sampling the Imaginary")
p_grid <- seq(from = 0, to = 1, length.out = 1000)
prior <- rep(1, 1000)
likelihood <- dbinom(6, size = 9, prob = p_grid)
posterior <- likelihood * prior
posterior <- posterior / sum(posterior)
set.seed(100)
samples <- sample(p_grid, prob = posterior, size = 1e4, replace = TRUE)
install.packages(c("coda","mvtnorm","devtools","loo"))
library(devtools)
devtools::install_github("rmcelreath/rethinking")
install.packages(c("coda","mvtnorm","devtools","loo"))
library(devtools)
devtools::install_github("rmcelreath/rethinking")
install.packages(c("coda", "mvtnorm", "devtools", "loo"))
# set the global chunk options
opts_chunk$set(message=FALSE, # don't print R messages in pdf -- CHANGE TO FALSE WHEN SUBMITTING FINAL VERSION!!!
warning=FALSE) # don't print warnings in pdf -- CHANGE TO FALSE WHEN SUBMITTING FINAL VERSION!!!
# load .RData files, .R files, etc.
# R packages required
suppressMessages(library(xtable, quietly=TRUE, warn.conflicts = FALSE,verbose = FALSE))
suppressMessages(library(tidyverse, quietly=TRUE, warn.conflicts = FALSE, verbose=FALSE))
suppressMessages(library(rethinking, quietly=TRUE, warn.conflicts = FALSE, verbose=FALSE))
install.packages("backports")
devtools::install_github("rmcelreath/rethinking")
install.packages("ps")
install.packages("ps")
devtools::install_github("rmcelreath/rethinking")
# set the global chunk options
opts_chunk$set(message=FALSE, # don't print R messages in pdf -- CHANGE TO FALSE WHEN SUBMITTING FINAL VERSION!!!
warning=FALSE) # don't print warnings in pdf -- CHANGE TO FALSE WHEN SUBMITTING FINAL VERSION!!!
# load .RData files, .R files, etc.
# R packages required
suppressMessages(library(xtable, quietly=TRUE, warn.conflicts = FALSE,verbose = FALSE))
suppressMessages(library(tidyverse, quietly=TRUE, warn.conflicts = FALSE, verbose=FALSE))
suppressMessages(library(rethinking, quietly=TRUE, warn.conflicts = FALSE, verbose=FALSE))
#Re-doing 3M1
p_grid <- seq(from = 0, to = 1, length.out = 1000)
prior <- ifelse(p_grid < 0.5, 0, 1)
likelihood <- dbinom(8, size = 15, prob = p_grid)
posterior <- likelihood*prior
posterior <- posterior / sum(posterior)
#Re-doing 3M2
samples <- sample(p_grid, prob = posterior, size = 1e4, replace = TRUE)
HDPI(samples, prob = 0.9)
#Re-doing 3M3
w <- rbinom(1e4, size = 15, prob = samples)
sum(w[w = 8]) / 1e4
#Re-doing 3M4
w <- rbinom(1e4, size = 9, prob = samples)
sum(w[w = 6]) / 1e4
# set the global chunk options
opts_chunk$set(message=FALSE, # don't print R messages in pdf -- CHANGE TO FALSE WHEN SUBMITTING FINAL VERSION!!!
warning=FALSE) # don't print warnings in pdf -- CHANGE TO FALSE WHEN SUBMITTING FINAL VERSION!!!
# load .RData files, .R files, etc.
# R packages required
suppressMessages(library(xtable, quietly=TRUE, warn.conflicts = FALSE,verbose = FALSE))
suppressMessages(library(tidyverse, quietly=TRUE, warn.conflicts = FALSE, verbose=FALSE))
suppressMessages(library(rethinking, quietly=TRUE, warn.conflicts = FALSE, verbose=FALSE))
#Re-doing 3M1
p_grid <- seq(from = 0, to = 1, length.out = 1000)
prior <- ifelse(p_grid < 0.5, 0, 1)
likelihood <- dbinom(8, size = 15, prob = p_grid)
posterior <- likelihood*prior
posterior <- posterior / sum(posterior)
#Re-doing 3M2
samples <- sample(p_grid, prob = posterior, size = 1e4, replace = TRUE)
HDPI(samples, prob = 0.9)
#Re-doing 3M3
w <- rbinom(1e4, size = 15, prob = samples)
sum(w[w = 8]) / 1e4
#Re-doing 3M4
w <- rbinom(1e4, size = 9, prob = samples)
sum(w[w = 6]) / 1e4
samples <- sample(p_grid, prob = posterior, size = 1e4, replace = TRUE)
HDPI(samples, prob = 0.9)
samples <- sample(p_grid, prob = posterior, size = 1e4, replace = TRUE)
HPDI(samples, prob = 0.9)
#Re-doing 3M1
p_grid <- seq(from = 0, to = 1, length.out = 1000)
prior <- ifelse(p_grid < 0.5, 0, 1)
likelihood <- dbinom(8, size = 15, prob = p_grid)
posterior <- likelihood*prior
posterior <- posterior / sum(posterior)
#Re-doing 3M2
samples <- sample(p_grid, prob = posterior, size = 1e4, replace = TRUE)
HPDI(samples, prob = 0.9)
#Re-doing 3M3
w <- rbinom(1e4, size = 15, prob = samples)
sum(w[w = 8]) / 1e4
#Re-doing 3M4
w <- rbinom(1e4, size = 9, prob = samples)
sum(w[w = 6]) / 1e4
0.7*15
0.7*9
6/15
8/15
8/15
0.7*9
# Chunk 15
data(homeworkch3)
# Chunk 16
sum(birth1) + sum(birth2)
# Chunk 17
p_grid <- seq(from = 0, to = 1, length.out = 1000)
prior <- rep(1, 1000)
boys <- sum(birth1) + sum(birth2)
births <- length(birth1) + length(birth2)
likelihood <- dbinom(boys, size = births, prob = p_grid)
posterior <- likelihood*prior
posterior <- posterior / sum(posterior)
p_grid <- seq(from = 0, to = 1, length.out = 1000)
prior <- rep(1, 1000)
boys <- sum(birth1) + sum(birth2)
births <- length(birth1) + length(birth2)
likelihood <- dbinom(boys, size = births, prob = p_grid)
posterior <- likelihood*prior
posterior <- posterior / sum(posterior)
p_grid[which.max(posterior)]
?sample
?HPDI
?rbinom
# Chunk 18
samples <- sample(posterior, 1e4, replace = TRUE)
#50% HPDI
HPDI(samples, prob = 0.5)
#89% HPDI
HPDI(samples, prob = 0.89)
#97% HPDI
HPDI(samples, prob = 0.97)
# Chunk 19
w <- rbinom(1e4, size = 200, prob = samples)
dens(w)
w <- rbinom(1e4, size = 200, prob = samples)
dens(samples)
births
boys
dbinom(111,200,0.5)
dbinom(111,200,0.55)
dbinom(111,200,0.1)
111/200
dbinom(111,200,0.555)
w
sort(w)
?sort
sort(w, decreasing = TRUE)
# Chunk 18
samples <- sample(posterior, 1e4, replace = TRUE)
#50% HPDI
HPDI(samples, prob = 0.5)
#89% HPDI
HPDI(samples, prob = 0.89)
#97% HPDI
HPDI(samples, prob = 0.97)
# Chunk 19
w <- rbinom(1e4, size = 200, prob = samples)
dens(samples)
# Chunk 18
samples <- sample(p_grid, prob = posterior, size = 1e4, replace = TRUE)
#50% HPDI
HPDI(samples, prob = 0.5)
#89% HPDI
HPDI(samples, prob = 0.89)
#97% HPDI
HPDI(samples, prob = 0.97)
# Chunk 19
w <- rbinom(1e4, size = 200, prob = samples)
dens(w)
sum(birth1)
w <- rbinom(1e4, size = 100, prob = samples)
#Number of boys in birth1
sum(birth1)
dens(w)
#Number of first borns who were girls
num_first_born_girls <- length(birth1) - sum(birth1)
w <- rbinom(1e4, size = num_first_born_girls, prob = samples)
dens(w)
#Number of first borns who were girls
num_first_born_girls <- length(birth1) - sum(birth1)
w <- rbinom(1e4, size = num_first_born_girls, prob = samples)
boys_following_girls <- birth2[birth1 = 0]
dens(w)
#Number of first borns who were girls
num_first_born_girls <- length(birth1) - sum(birth1)
w <- rbinom(1e4, size = num_first_born_girls, prob = samples)
boys_following_girls <- birth2[birth1 < 1]
dens(w)
#Number of first borns who were girls
num_first_born_girls <- length(birth1) - sum(birth1)
w <- rbinom(1e4, size = num_first_born_girls, prob = samples)
boys_following_girls <- birth2[birth1 < 1 & birth2 = 1]
dens(w)
#Number of first borns who were girls
num_first_born_girls <- length(birth1) - sum(birth1)
w <- rbinom(1e4, size = num_first_born_girls, prob = samples)
boys_following_girls <- birth2[birth1 < 1 & birth2 = 1]
dens(w)
#Number of first borns who were girls
num_first_born_girls <- length(birth1) - sum(birth1)
w <- rbinom(1e4, size = num_first_born_girls, prob = samples)
boys_following_girls <- birth2[birth1 < 1 & birth2 > 0]
dens(w)
#Number of first borns who were girls
num_first_born_girls <- length(birth1) - sum(birth1)
w <- rbinom(1e4, size = num_first_born_girls, prob = samples)
boys_following_girls <- birth2[birth1 < 1]
dens(w)
sum(boys_following_girls)
#Number of first borns who were girls
num_first_born_girls <- length(birth1) - sum(birth1)
w <- rbinom(1e4, size = num_first_born_girls, prob = samples)
boys_following_girls <- birth2[birth1 < 1 & birth2 > 0]
#Number of boys born after a girl
sum(boys_following_girls)
dens(w)
dnorm(0,0,0.1)
