\documentclass[12pt]{article}
 
\usepackage[margin=1in]{geometry}
\usepackage{amsmath,amsthm,amssymb, mathtools}
\usepackage[T1]{fontenc}
\usepackage{lmodern}
\usepackage{fixltx2e}
\usepackage[shortlabels]{enumitem}
 
\newcommand{\N}{\mathbb{N}}
\newcommand{\R}{\mathbb{R}}
\newcommand{\Z}{\mathbb{Z}}
\newcommand{\Q}{\mathbb{Q}}

\newenvironment{theorem}[2][Theorem]{\begin{trivlist}
\item[\hskip \labelsep {\bfseries #1}\hskip \labelsep {\bfseries #2.}]}{\end{trivlist}}
\newenvironment{lemma}[2][Lemma]{\begin{trivlist}
\item[\hskip \labelsep {\bfseries #1}\hskip \labelsep {\bfseries #2.}]}{\end{trivlist}}
\newenvironment{exercise}[2][Exercise]{\begin{trivlist}
\item[\hskip \labelsep {\bfseries #1}\hskip \labelsep {\bfseries #2.}]}{\end{trivlist}}
\newenvironment{problem}[2][Problem]{\begin{trivlist}
\item[\hskip \labelsep {\bfseries #1}\hskip \labelsep {\bfseries #2.}]}{\end{trivlist}}
\newenvironment{question}[2][Question]{\begin{trivlist}
\item[\hskip \labelsep {\bfseries #1}\hskip \labelsep {\bfseries #2.}]}{\end{trivlist}}
\newenvironment{corollary}[2][Corollary]{\begin{trivlist}
\item[\hskip \labelsep {\bfseries #1}\hskip \labelsep {\bfseries #2.}]}{\end{trivlist}}
\newcommand{\textfrac}[2]{\dfrac{\text{#1}}{\text{#2}}}

\begin{document}

\title{Statistical Rethinking: Chapter 6 - Overfitting, Regularization, and Information Criteria}

\author{Chris Hayduk}
\date{\today}

\maketitle

<<echo=F, results = 'hide', warning=FALSE, message=FALSE>>=
# set the global chunk options
opts_chunk$set(message=FALSE, # don't print R messages in pdf -- CHANGE TO FALSE WHEN SUBMITTING FINAL VERSION!!!
               warning=FALSE) # don't print warnings in pdf -- CHANGE TO FALSE WHEN SUBMITTING FINAL VERSION!!!

# load .RData files, .R files, etc.
# R packages required
suppressMessages(library(readxl, quietly=TRUE, warn.conflicts = FALSE,verbose = FALSE))
suppressMessages(library(tidyverse, quietly=TRUE, warn.conflicts = FALSE, verbose=FALSE))
suppressMessages(library(rethinking, quietly=TRUE, warn.conflicts = FALSE, verbose=FALSE))

@

\section{Easy}

\begin{problem}{6E1}
\text{ }\\
State the three motivating criteria that define information entropy.
\end{problem}

The three motivating criteria that define information entropy are:
\begin{enumerate}
	\item The measure of uncertainty should be continuous. If it were not, then an arbitrarily small change in any of the probabilities would result in a massive change in uncertainty.
	\item The measure of uncertainty should increase as the number of possible events increases. For example, suppose there are two cities that need weather forecasts. In the first city, it rains on half of the days in the year and is sunny on the others. In the second, it rains, shines, and hails, each on 1 out of every 3 days in the year. We'd like our measure of uncertainty to be larger in the second city, where there is one more kind of event to predict.
	\item The measure of uncertainty should be additive. What this means is that if we first measure the uncertainty about rain or shine (2 possible events) and then the uncertainty about hot or cold (2 different possible events), the uncertainty over the four combinations of these events - rain/hot, rain/cold, shine/hot, shine/cold - should be the sum of the separate uncertainties.
\end{enumerate}

\begin{problem}{6E2}
\text{ }\\
Suppose a coin is weighted such that, when it is tossed and lands on a table, it comes up heads 70\% of the time. What is the entropy of this coin?
\end{problem}

$$H(p) = -Elog(p_i) = -\sum_{i=1}^{n} p_ilog(p_i) = -(0.7*log(0.7) + 0.3*log(0.3)) \approx 0.610864$$

\begin{problem}{6E3}
\text{ }\\
Suppose a four-sided die is loaded such that, when tossed onto a table, it shows "1" 20\%, "2" 25\%, "3" 25\%, and "4" 30\% of the time. What is the entropy of this die?
\end{problem}

\begin{multline*}
H(p) = -Elog(p_i) = -\sum_{i=1}^{n} p_ilog(p_i) \\ = -(0.2*log(0.2) + 0.25*log(0.25) + 0.25*log(0.25) + 0.3*log(0.3)) \approx 1.37623
\end{multline*}

\begin{problem}{6E4}
\text{ }\\
Suppose another four-sided die is loaded such that it never shows "4". The other three sides show equally often. What is the entropy of this die?
\end{problem}

\begin{multline*}
H(p) = -Elog(p_i) = -\sum_{i=1}^{n} p_ilog(p_i) \\ = -(0.3333*log(0.3333) + 0.3333*log(0.3333) + 0.3333*log(0.3333)) \approx 1.09498
\end{multline*}

\section{Medium}

\begin{problem}{6M1}
\text{ }\\
Write down and compare the definitions of AIC, DIC, and WAIC. Which of these criteria is most general? Which assumptions are required to transform a more general criterion into a less general one?
\end{problem}

Information criteria: \\
AIC = D_train + 2p \\
DIC = \overline{D} + (\overline{D} - \hat{D}) = \overline{D} + p_D \\
WAIC = -2(lppd - p_WAIC)

WAIC is the most general, as it does not require a multivariate Guassian posterior as in DIC & AIC, and it does not require uninformative priors as in AIC.

\begin{problem}{6M2}
\text{ }\\
Explain the difference between model \texit{selection} and model \texit{averaging}. What information is lost under model selection? What information is lost under model averaging?
\end{problem}

Model selection involves using DIC/WAIC in combination with the estimates and posterior predictive checks from each model in order to choose the "best" model out of a given set. Model averaging means using DIC/WAIC to construct a posterior predictive distribution that exploits what we know about relative accuracy of the models. This helps guard against overconfidence in model structure, in the same way that using the entire posterior distrbution helps guard against overconfidence in parameter values.

Model selection causes us to lose the information provided by the other models in the set that we're considering. Model averaging causes us to have a much more conservative (ie. wider) interval for $\mu$.

\begin{problem}{6M3}
\text{ }\\
When comparing models with an information criterion, why must all models be fit to exactly the same observations? What would happen to the information criterion values if the models were fit to different numbers of observations? Perform some experiments if you are not sure.
\end{problem}

The model fit to fewer observations will almost always have a better deviance and AIC/DIC/WAIC value because it has been asked to predict less.

\begin{problem}{6M4}
\text{ }\\
What happens to the effective number of parameters, as measured by DIC or WAIC, as a prior becomes more concentrated? Why? Perform some experiments if you are not sure.
\end{problem}

Regularizing priors constrain a model's flexibility. Since the effective number of parameters measures how flexible the model is, as a prior becomes more concentrated, it reduces the effective number of parameters.

\begin{problem}{6M5}
\text{ }\\
Provide an informal explanation of why informative priors reduce overfitting.
\end{problem}

Informative priors are generally very narrow around their mean. That is, they tend to have small standard deviations. Since the machine will be very skeptical of values that are more than two standard deviations above or below the prior's mean, a small standard deviation will restrict the paramter to values close to the prior's mean.

\begin{problem}{6M6}
\text{ }\\
Provide an informal explanation of why overly informative priors result in underfitting.
\end{problem}

An overly informative prior will have an excessively tight prior distribution. As a result, the parameter may be constrained to a range that does not contain its "true" value, thus causing the model to underfit the data.

\section{Hard}

All practice problems to follow use the same data. Pull out the old Howell !Kung demography data and split it into two equally sized data frames. Here's the code to do it:

<<warning=FALSE, message=FALSE>>=

data(Howell1)

d <- Howell1

d$age <- (d$age - mean(d$age))/sd(d$age)

set.seed(1000)

i <- sample(1:nrow(d), size=nrow(d)/2)

d1 <- d[i, ]

d2 <- d[-i, ]

@

You now have two randomly formed data frames, each with 272 rows. The notion here is to use the cases in d1 to fit models and the cases in d2 to evaluate them. The set.seed command just ensures that everyone works with the same randomly shuffled data.

Now let \texit{h}\textsubscript{i} and \texit{x}\textsubscript{i} be the height and centered age values, respectively, on row \texit{i}. Fit the folowing models to the data in d1:
\begin{itemize}
\item M\textsubscript{1}: \texit{h}\textsubscript{i} $\sim$ Normal($\mu$\textsubscript{i}, $\sigma$)\\
$\mu$\textsubscript{i} = $\alpha$ + $\beta$\textsubscript{1}x\textsubscript{i}
\item M\textsubscript{2}: \texit{h}\textsubscript{i} $\sim$ Normal($\mu$\textsubscript{i}, $\sigma$)\\
$\mu$\textsubscript{i} = $\alpha$ + $\beta$\textsubscript{1}x\textsubscript{i} + $\beta$\textsubscript{2}x\textsubscript{i}\textsuperscript{2}
\item M\textsubscript{2}: \texit{h}\textsubscript{i} $\sim$ Normal($\mu$\textsubscript{i}, $\sigma$)\\
$\mu$\textsubscript{i} = $\alpha$ + $\beta$\textsubscript{1}x\textsubscript{i} + $\beta$\textsubscript{2}x\textsubscript{i}\textsuperscript{2} + $\beta$\textsubscript{3}x\textsubscript{i}\textsuperscript{3}
\item M\textsubscript{3}: \texit{h}\textsubscript{i} $\sim$ Normal($\mu$\textsubscript{i}, $\sigma$)\\
$\mu$\textsubscript{i} = $\alpha$ + $\beta$\textsubscript{1}x\textsubscript{i} + $\beta$\textsubscript{2}x\textsubscript{i}\textsuperscript{2} + $\beta$\textsubscript{3}x\textsubscript{i}\textsuperscript{3}
\item M\textsubscript{4}: \texit{h}\textsubscript{i} $\sim$ Normal($\mu$\textsubscript{i}, $\sigma$)\\
$\mu$\textsubscript{i} = $\alpha$ + $\beta$\textsubscript{1}x\textsubscript{i} + $\beta$\textsubscript{2}x\textsubscript{i}\textsuperscript{2} + $\beta$\textsubscript{3}x\textsubscript{i}\textsuperscript{3} + $\beta$\textsubscript{4}x\textsubscript{i}\textsuperscript{4}
\item M\textsubscript{5}: \texit{h}\textsubscript{i} $\sim$ Normal($\mu$\textsubscript{i}, $\sigma$)\\
$\mu$\textsubscript{i} = $\alpha$ + $\beta$\textsubscript{1}x\textsubscript{i} + $\beta$\textsubscript{2}x\textsubscript{i}\textsuperscript{2} + $\beta$\textsubscript{3}x\textsubscript{i}\textsuperscript{3} + $\beta$\textsubscript{4}x\textsubscript{i}\textsuperscript{4} + $\beta$\textsubscript{5}x\textsubscript{i}\textsuperscript{5}
\item M\textsubscript{6}: \texit{h}\textsubscript{i} $\sim$ Normal($\mu$\textsubscript{i}, $\sigma$)\\
$\mu$\textsubscript{i} = $\alpha$ + $\beta$\textsubscript{1}x\textsubscript{i} + $\beta$\textsubscript{2}x\textsubscript{i}\textsuperscript{2} + $\beta$\textsubscript{3}x\textsubscript{i}\textsuperscript{3} + $\beta$\textsubscript{4}x\textsubscript{i}\textsuperscript{4} + $\beta$\textsubscript{5}x\textsubscript{i}\textsuperscript{5} + $\beta$\textsubscript{6}x\textsubscript{i}\textsuperscript{6}
\end{itemize}

Use map to fit these. Use weakly regularizing priors for all parameters.

Note that fitting all of these polynomials to the height-by-age relationship is not a good way to derive insight. It would be better to have a simpler approach that would allow for more insight, like perhaps a piecewise linear model. But the set of polynomial families above will serve to help you practice and understand model comparison and averaging.

<<warning=FALSE, message=FALSE>>=

a.start <- mean(d1$height)
sigma.start <- sd(d1$height)

m1 <- map(
  alist(
    height ~ dnorm(a + b1*age, sigma),
    a ~ dnorm(a.start, 15),
    b1 ~ dnorm(10, 15),
    sigma ~ dunif(0, 50)
  ), data = d1, start=list(a = a.start, b1 = 0, sigma = sigma.start))

m2 <- map(
  alist(
    height ~ dnorm(a + b1*age + b2*I(age^2), sigma),
    a ~ dnorm(a.start, 15),
    b1 ~ dnorm(0, 15),
    b2 ~ dnorm(0, 15),
    sigma ~ dunif(0, 50)
  ), data = d1, start=list(a = a.start, b1 = 0, b2 = 0, sigma = sigma.start))

m3 <- map(
  alist(
    height ~ dnorm(a + b1*age + b2*I(age^2) + b3*I(age^3), sigma),
    a ~ dnorm(a.start, 15),
    b1 ~ dnorm(0, 15),
    b2 ~ dnorm(0, 15),
    b3 ~ dnorm(0, 15),
    sigma ~ dunif(0, 50)
  ), data = d1, start=list(a = a.start, b1 = 0, b2 = 0, b3 = 0, sigma = sigma.start))

m4 <- map(
  alist(
    height ~ dnorm(a + b1*age + b2*I(age^2) + b3*I(age^3) + b4*I(age^4), sigma),
    a ~ dnorm(a.start, 15),
    b1 ~ dnorm(0, 15),
    b2 ~ dnorm(0, 15),
    b3 ~ dnorm(0, 15),
    b4 ~ dnorm(0, 15),
    sigma ~ dunif(0, 50)
  ), data = d1, start=list(a = a.start, b1 = 0, b2 = 0,
                           b3 = 0, b4 = 0, sigma = sigma.start))

m5 <- map(
  alist(
    height ~ dnorm(a + b1*age + b2*I(age^2) + 
                     b3*I(age^3) + b4*I(age^4) + b5*I(age^5), sigma),
    a ~ dnorm(a.start, 15),
    b1 ~ dnorm(0, 15),
    b2 ~ dnorm(0, 15),
    b3 ~ dnorm(0, 15),
    b4 ~ dnorm(0, 15),
    b5 ~ dnorm(0, 15),
    sigma ~ dunif(0, 50)
  ), data = d1, start=list(a = a.start, b1 = 0, b2 = 0,
                           b3 = 0, b4 = 0, b5 = 0, sigma = sigma.start))

m6 <- map(
  alist(
    height ~ dnorm(a + b1*age + b2*I(age^2) + 
                     b3*I(age^3) + b4*I(age^4) + 
                     b5*I(age^5) + b6*I(age^6), sigma),
    a ~ dnorm(a.start, 15),
    b1 ~ dnorm(0, 15),
    b2 ~ dnorm(0, 15),
    b3 ~ dnorm(0, 15),
    b4 ~ dnorm(0, 15),
    b5 ~ dnorm(0, 15),
    b6 ~ dnorm(0, 15),
    sigma ~ dunif(0, 50)
  ), data = d1, start=list(a=a.start, b1 = 0, b2 = 0,
                           b3 = 0, b4 = 0, b5 = 0,
                           b6 = 0, sigma = sigma.start))

@

\begin{problem}{6H1}
\text{ }\\
Compare the models above using WAIC. Compare the model rankings, as well as the WAIC weights.
\end{problem}

<<warning=FALSE, message=FALSE>>=

model.comparison <- compare(m1, m2, m3, m4, m5, m6)

print(model.comparison)

@

By WAIC, m4 should have the lowest average deviance on a new sample. Naturally m4 has the highest weight in the model comparison. Interestingly, m1, m2, and m3 have very small (sometimes 0) weights. This likely occurs because the WAIC values for m4, m5, and m6 are closely clustered together and thus all have a large share of the weight.

\begin{problem}{6H2}
\text{ }\\
For each model, produce a plot with model averaged mean and 97\% confidence interval of the mean, superimposed on the raw data. How do predictions differ across models?
\end{problem}

<<warning=FALSE, message=FALSE>>=



@


\end{document}